% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/scale_count.R
\name{scale_count}
\alias{scale_count}
\title{Scale counts to match totals}
\usage{
scale_count(count, size, count_total, size_total)
}
\arguments{
\item{count}{Number of people sampled who
experienced the outcome of interest.}

\item{size}{Number of people sampled.}

\item{count_total}{Target number that \code{count}
should add up to.}

\item{size_total}{Target number that \code{size}
should add up to.}
}
\value{
A numeric vector with scaled counts.
}
\description{
Scale counts so that they add up to
pre-specified totals, such as totals
obtained from a national survey.
}
\examples{
## use synthetic census and survey data
census <- smoothscale::syn_census
survey <- smoothscale::syn_survey

## adjust all groups to match combined total
national_child_labour <- 1104194
national_all_children <- 3035800
child_labour_sc <- scale_count(count = census$child_labour,
                               size = census$all_children,
                               count_total = national_child_labour,
                               size_total = national_all_children)

## a tidyverse-style way of doing the same thing
library(dplyr)
census \%>\%
  mutate(child_labour_sc = scale_count(count = child_labour,
                                       size = all_children,
                                       count_total = national_child_labour,
                                       size_total = national_all_children))

## use tidyverse functions to adjust each
## age-sex group to a different total
scaled <- census \%>\%
  left_join(survey, by = c("age", "sex")) \%>\%
  group_by(age, sex) \%>\%
  mutate(child_labour_sc = scale_count(count = child_labour,
                                       size = all_children,
                                       count_total = national_child_labour,
                                       size_total = national_all_children))
scaled
scaled \%>\%
  count(age, sex, wt = child_labour_sc)
}
\seealso{
\code{\link[=smooth_count]{smooth_count()}}
}
